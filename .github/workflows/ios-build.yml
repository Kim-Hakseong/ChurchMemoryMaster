name: iOS Build (Capacitor) - TestFlight

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-14
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build web (Vite)
        run: npm run build

      - name: Install Capacitor CLI
        run: npm i -g @capacitor/cli

      - name: Install Capacitor iOS package
        run: npm install @capacitor/ios@^7

      - name: Add/Sync iOS platform
        run: |
          if [ ! -d ios ]; then
            npx cap add ios
          fi
          npx cap sync ios

      - name: Generate iOS App Icons from attached_assets/logo.png
        run: node scripts/generate-ios-icons.cjs

      - name: Install Cocoapods
        run: |
          sudo gem install cocoapods -N
          cd ios/App && pod install --repo-update

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install fastlane
        run: sudo gem install fastlane -N

      - name: Create App Store Connect API key file
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
        run: |
          echo "$ASC_KEY_P8_BASE64" | base64 --decode > AuthKey.p8
          ruby -e 'require "json"; k=File.read("AuthKey.p8"); File.write("api_key.json", JSON.pretty_generate({"key_id"=>ENV["ASC_KEY_ID"], "issuer_id"=>ENV["ASC_ISSUER_ID"], "key"=>k}))'

      - name: Prepare match credentials
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          if [ -z "$MATCH_GIT_URL" ]; then
            echo "MATCH_GIT_URL is not set. Please configure a private repo for certificates." && exit 1
          fi

      - name: Generate/Install signing certs & profiles (fastlane match)
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        run: |
          READONLY=true
          if [ -n "$FASTLANE_SESSION" ] && [ -n "$APPLE_ID" ]; then
            echo "Using FASTLANE_SESSION for auth; will allow creating certs/profiles if missing."
            READONLY=false
          else
            echo "No FASTLANE_SESSION provided; running in readonly mode. Make sure match repo already contains certs & profiles."
          fi
          fastlane run match type:"appstore" app_identifier:"$APP_BUNDLE_ID" readonly:$READONLY git_url:"$MATCH_GIT_URL" storage_mode:"git" username:"$APPLE_ID"

      - name: Build IPA (fastlane gym)
        env:
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          fastlane run build_app \
            workspace:"ios/App/App.xcworkspace" \
            scheme:"App" \
            configuration:"Release" \
            export_method:"app-store" \
            output_directory:"build" \
            output_name:"App.ipa" \
            xcargs:"DEVELOPMENT_TEAM=$APPLE_TEAM_ID PRODUCT_BUNDLE_IDENTIFIER=$APP_BUNDLE_ID CURRENT_PROJECT_VERSION=$GITHUB_RUN_NUMBER -allowProvisioningUpdates"

      - name: Upload to TestFlight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
        run: |
          fastlane run upload_to_testflight ipa:"build/App.ipa" api_key_path:"api_key.json"

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/App.ipa


